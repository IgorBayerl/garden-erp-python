name: Build and Release

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows you to trigger the workflow manually

jobs:
  build:
    permissions: write-all # Required to create a release
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js environment
      uses: actions/setup-node@v3
      with:
        node-version: '22'

    - name: Install client dependencies and build
      run: |
        cd client
        yarn install
        yarn build

    - name: Set up Python environment
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'  # Use the same version of Python as your project

    - name: Change to the project directory
      run: cd server

    - name: Install dependencies
      run: |
        cd server
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Collect static files
      run: |
        cd server
        python manage.py collectstatic --noinput

    - name: Build executable with PyInstaller
      run: |
        cd server
        pyinstaller GardenErp.spec

    - name: Set Build Name with Date and Time
      run: |
        $shortSha = $env:GITHUB_SHA.Substring(0, 8)
        echo "BUILD_NAME=$shortSha" >> $env:GITHUB_ENV

    - name: Create a zip file with the executable and static files
      run: |
        cd server/dist
        mkdir GardenErp-${{ env.BUILD_NAME }}
        mv GardenErp.exe GardenErp-${{ env.BUILD_NAME }}/
        mv static GardenErp-${{ env.BUILD_NAME }}/
        powershell Compress-Archive -Path GardenErp-${{ env.BUILD_NAME }} -DestinationPath GardenErp-${{ env.BUILD_NAME }}.zip

    - name: Archive build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: GardenErp-${{ env.BUILD_NAME }}
        path: server/dist/GardenErp-${{ env.BUILD_NAME }}.zip

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.BUILD_NAME }}  # Unique tag name with date and time
        release_name: Release ${{ env.BUILD_NAME }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: server/dist/GardenErp-${{ env.BUILD_NAME }}.zip
        asset_name: GardenErp-${{ env.BUILD_NAME }}.zip
        asset_content_type: application/zip
